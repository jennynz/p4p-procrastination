plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24), xaxt="n", xlim="")
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=hours[seq(2,24,2)], las=2)
hours
apply(hours, fun=paste, "00", sep="")
apply(hours, FUN=paste, "00", sep="")
help(apply)
apply(hours, "00", paste, sep="")
dim(hours)
hours
unlist(hours)
dim(unlist(hours))
length(hours)
paste(hours, "00", sep="")
coeff_bigger=2
c <- as.numeric(days) - as.numeric(days)[1] + 1
cols <- rgb(c/300,c/300,0.9,0.9)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(hours)) {
points(hours~rep(days[i],24), cex=tally.df[,hours[i]]*coeff_bigger, pch=19, col=cols)
}
paste(hours, "00", sep="")
hours
points(hours~rep(days[1],24), cex=tally.df[,hours[1]]*coeff_bigger, pch=19, col=cols)
hours
rep(days[1],24)
tally.df[,hours[1]]
tally.df[,hours[1]]*coeff_bigger
head(tally.df)
tally.df[days[1],hours[1]]*coeff_bigger
tally.df[days[1],hours[1]]
tally.df[1,hours[1]]
tally.df[1,hours
]
tally.df[1,hours]*coeff_bigger
tally.df[1]
tally.df[1,]
points(hours~rep(days[i],24), cex=tally.df[1,]*coeff_bigger, pch=19, col=cols)
unlist(tally.df[1,])
unlist(unname(tally.df[1,]))
points(hours~rep(days[i],24), cex=unlist(tally.df[1,]*coeff_bigger), pch=19, col=cols)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[1,]*coeff_bigger), pch=19, col=cols)
}
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(unname(tally.df[i,]*coeff_bigger)), pch=19, col=cols)
}
unname(tally.df[1,])
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
cols
palette(cols)
c/300
c/30
c/5
c/10
c
cols <- rgb(c,c,0.9,0.9)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
hours
as.numeric(hours)
c <- as.numeric(hours)
cols <- rgb(c,c,0.9,0.9)
cols <- rgb(c/24,c/24,0.9,0.9)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
as.numeric(hours)help(rgb
help(rgb)
cols <- rgb(c/24,c/24,0.9)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
cols <- rgb(c/24,c/24,0.8)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
c**2
c <- as.numeric(hours)
cols <- rgb(c**2/550,c/24,0.8)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
cols <- rgb(c**2/550,100/c,0.8)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
100/c
c
c <- 1:24
cols <- rgb(c**2/550,100/c,0.8)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
write(as.character(commits.df$message), file="commit_messages.txt", ncolumns = 1, append = F)
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb(c**2/550, 100/c, 0.2)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
graphics.off() # close all graphics windows
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb(c**2/550, 100/c, 0.2)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
cols <- rgb(c**2/550, 100/c, 0.2, 0.9)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb(c**2/550, 100/c, 0)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
cols
help(Rgb)
help(rgb)
M
cols <- rgb(c**2/550, 100/c, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
cols <- rgb(c**2/550, 100/c, 0.2, max=1)
100/c
cols <- rgb(c**2/550, 1/c, 0.2, max=1)
1/c
c
cols <- rgb(c**2/550, 1/(c+0.1), 0.2, max=1)
1/c(+.1)
1/(c+.1)
c**2/550
cols <- rgb(c^2/550, 1/(c+0.1), 0.2, max=1)
max(c^2/550)
max(1/(c+0.1))
c[17]
c+0.1
1/23.1
1/(c+0.1)
cols <- rgb(c^2/550, 1/(c+1), 0.2, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
write(as.character(commits.df$message), file="commit_messages.txt", ncolumns = 1, append = F)
1/(c+1)
cols <- rgb(c^2/1000, 1/(c+1.5), 0.5, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
cols <- rgb(c^2/1000, 1/(c+1.5), 0.3, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
write(as.character(commits.df$message), file="commit_messages.txt", ncolumns = 1, append = F)
cols <- rgb(c^2/1000, 1/(c+2), 0.3, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
write(as.character(commits.df$message), file="commit_messages.txt", ncolumns = 1, append = F)
cols <- rgb(c^2/1000, 1/(c+2), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
1/(c+2)
cols <- rgb(c^2/1000, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
write(as.character(commits.df$message), file="commit_messages.txt", ncolumns = 1, append = F)
cols <- rgb(c^2/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
cols <- rgb(c^3/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
max(c^3)
(c^2+100)
cols <- rgb((c^2+100)/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
write(as.character(commits.df$message), file="commit_messages.txt", ncolumns = 1, append = F)
# Part IV Project Infographic
# Time of day & number of git commits
# Also exports commit messages to space separated txt file for word cloud, then generates said word cloud.
rm(list=ls()) # clear workspace
graphics.off() # close all graphics windows
path <<- "/home/jenny/Documents/P4P Infographic"
setwd(path)
git.log <- file(paste(path,"commits.csv",sep = "/"), open = 'r')
days <- seq(as.Date("2016-07-31"), as.Date("2016-10-04"), by="days")
times <- seq(
from=as.POSIXct("2012-1-1 0:00"),
to=as.POSIXct("2012-1-1 23:00"),
by="hour"
)
hours <- strftime(times, format="%H")
# Switch the hours order so that the day starts at 7am and finishes at 6am the next day.
hours <- hours[c(8:24, 1:7)]
tally.df <- data.frame(matrix(ncol = length(times), nrow = length(days), data = 0))
rownames(tally.df) <- days
colnames(tally.df) <- hours # Hours only. Use "%H:%M:%S" for mins and secs.
# Download git log in csv format with nicely formatted dates.
# git log --date=iso --pretty=format:'"%h","%an","%ad","%s"' > commits.csv
commits.df <- read.csv(file = git.log, header = FALSE)
colnames(commits.df) <- c("time", "message")
close(git.log)
# Take just the times of the commits, and populate tally df.
for (t in as.character(commits.df$time)) {
# Day
d <- unlist(strsplit(t, ''))[1:10]
d <- paste(d, collapse="")
# Time
h <- unlist(strsplit(t, ''))[12:13]
h <- paste(h, collapse="")
tally.df[d, h] <- tally.df[d, h] + 1
}
write.csv(tally.df, file = "commits_tally.csv")
# COMMIT TIMES SCATTER PLOT
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb((c^2+100)/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of day", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
# Part IV Project Infographic
# Time of day & number of git commits
# Also exports commit messages to space separated txt file for word cloud, then generates said word cloud.
rm(list=ls()) # clear workspace
graphics.off() # close all graphics windows
path <<- "/home/jenny/Documents/P4P Infographic"
setwd(path)
git.log <- file(paste(path,"commits.csv",sep = "/"), open = 'r')
days <- seq(as.Date("2016-06-31"), as.Date("2016-10-04"), by="days")
times <- seq(
from=as.POSIXct("2012-1-1 0:00"),
to=as.POSIXct("2012-1-1 23:00"),
by="hour"
)
hours <- strftime(times, format="%H")
# Switch the hours order so that the day starts at 7am and finishes at 6am the next day.
hours <- hours[c(8:24, 1:7)]
tally.df <- data.frame(matrix(ncol = length(times), nrow = length(days), data = 0))
rownames(tally.df) <- days
colnames(tally.df) <- hours # Hours only. Use "%H:%M:%S" for mins and secs.
# Download git log in csv format with nicely formatted dates.
# git log --date=iso --pretty=format:'"%h","%an","%ad","%s"' > commits.csv
commits.df <- read.csv(file = git.log, header = FALSE)
colnames(commits.df) <- c("time", "message")
close(git.log)
# Take just the times of the commits, and populate tally df.
for (t in as.character(commits.df$time)) {
# Day
d <- unlist(strsplit(t, ''))[1:10]
d <- paste(d, collapse="")
# Time
h <- unlist(strsplit(t, ''))[12:13]
h <- paste(h, collapse="")
tally.df[d, h] <- tally.df[d, h] + 1
}
write.csv(tally.df, file = "commits_tally.csv")
# COMMIT TIMES SCATTER PLOT
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb((c^2+100)/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of commit/Unreasonable-ness of hour", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
title("Hour and number of git commits over time")
# Part IV Project Infographic
# Time of day & number of git commits
# Also exports commit messages to space separated txt file for word cloud, then generates said word cloud.
rm(list=ls()) # clear workspace
graphics.off() # close all graphics windows
path <<- "/home/jenny/Documents/P4P Infographic"
setwd(path)
git.log <- file(paste(path,"commits.csv",sep = "/"), open = 'r')
days <- seq(as.Date("2016-06-31"), as.Date("2016-10-04"), by="days")
times <- seq(
from=as.POSIXct("2012-1-1 0:00"),
to=as.POSIXct("2012-1-1 23:00"),
by="hour"
)
hours <- strftime(times, format="%H")
# Switch the hours order so that the day starts at 7am and finishes at 6am the next day.
hours <- hours[c(8:24, 1:7)]
tally.df <- data.frame(matrix(ncol = length(times), nrow = length(days), data = 0))
rownames(tally.df) <- days
colnames(tally.df) <- hours # Hours only. Use "%H:%M:%S" for mins and secs.
# Download git log in csv format with nicely formatted dates.
# git log --date=iso --pretty=format:'"%h","%an","%ad","%s"' > commits.csv
commits.df <- read.csv(file = git.log, header = FALSE)
colnames(commits.df) <- c("time", "message")
close(git.log)
# Take just the times of the commits, and populate tally df.
for (t in as.character(commits.df$time)) {
# Day
d <- unlist(strsplit(t, ''))[1:10]
d <- paste(d, collapse="")
# Time
h <- unlist(strsplit(t, ''))[12:13]
h <- paste(h, collapse="")
tally.df[d, h] <- tally.df[d, h] + 1
}
write.csv(tally.df, file = "commits_tally.csv")
# COMMIT TIMES SCATTER PLOT
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb((c^2+100)/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of commit/Unreasonable-ness of hour", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
title("Hour and number of git commits over time")
days <- seq(as.Date("2016-06-31"), as.Date("2016-10-04"), by="days")
rm(list=ls()) # clear workspace
graphics.off() # close all graphics windows
path <<- "/home/jenny/Documents/P4P Infographic"
setwd(path)
git.log <- file(paste(path,"commits.csv",sep = "/"), open = 'r')
days <- seq(as.Date("2016-31-06"), as.Date("2016-10-04"), by="days")
times <- seq(
from=as.POSIXct("2012-1-1 0:00"),
to=as.POSIXct("2012-1-1 23:00"),
by="hour"
)
hours <- strftime(times, format="%H")
# Switch the hours order so that the day starts at 7am and finishes at 6am the next day.
hours <- hours[c(8:24, 1:7)]
tally.df <- data.frame(matrix(ncol = length(times), nrow = length(days), data = 0))
rownames(tally.df) <- days
colnames(tally.df) <- hours # Hours only. Use "%H:%M:%S" for mins and secs.
# Download git log in csv format with nicely formatted dates.
# git log --date=iso --pretty=format:'"%h","%an","%ad","%s"' > commits.csv
commits.df <- read.csv(file = git.log, header = FALSE)
colnames(commits.df) <- c("time", "message")
close(git.log)
# Take just the times of the commits, and populate tally df.
for (t in as.character(commits.df$time)) {
# Day
d <- unlist(strsplit(t, ''))[1:10]
d <- paste(d, collapse="")
# Time
h <- unlist(strsplit(t, ''))[12:13]
h <- paste(h, collapse="")
tally.df[d, h] <- tally.df[d, h] + 1
}
write.csv(tally.df, file = "commits_tally.csv")
# COMMIT TIMES SCATTER PLOT
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb((c^2+100)/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of commit/Unreasonable-ness of hour", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
title("Hour and number of git commits over time")
days <- seq(as.Date("2016-31-06"), as.Date("2016-10-04"), by="days")
days <- seq(as.Date("2016-06-30"), as.Date("2016-10-04"), by="days")
rm(list=ls()) # clear workspace
graphics.off() # close all graphics windows
path <<- "/home/jenny/Documents/P4P Infographic"
setwd(path)
git.log <- file(paste(path,"commits.csv",sep = "/"), open = 'r')
days <- seq(as.Date("2016-06-30"), as.Date("2016-10-04"), by="days")
times <- seq(
from=as.POSIXct("2012-1-1 0:00"),
to=as.POSIXct("2012-1-1 23:00"),
by="hour"
)
hours <- strftime(times, format="%H")
# Switch the hours order so that the day starts at 7am and finishes at 6am the next day.
hours <- hours[c(8:24, 1:7)]
tally.df <- data.frame(matrix(ncol = length(times), nrow = length(days), data = 0))
rownames(tally.df) <- days
colnames(tally.df) <- hours # Hours only. Use "%H:%M:%S" for mins and secs.
# Download git log in csv format with nicely formatted dates.
# git log --date=iso --pretty=format:'"%h","%an","%ad","%s"' > commits.csv
commits.df <- read.csv(file = git.log, header = FALSE)
colnames(commits.df) <- c("time", "message")
close(git.log)
# Take just the times of the commits, and populate tally df.
for (t in as.character(commits.df$time)) {
# Day
d <- unlist(strsplit(t, ''))[1:10]
d <- paste(d, collapse="")
# Time
h <- unlist(strsplit(t, ''))[12:13]
h <- paste(h, collapse="")
tally.df[d, h] <- tally.df[d, h] + 1
}
write.csv(tally.df, file = "commits_tally.csv")
# COMMIT TIMES SCATTER PLOT
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb((c^2+100)/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of commit/Unreasonable-ness of hour", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
title("Hour and number of git commits over time")
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of commit / Unreasonable-ness of hour", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
title("Hour and number of git commits over time")
rm(list=ls()) # clear workspace
graphics.off() # close all graphics windows
path <<- "/home/jenny/Documents/P4P Infographic"
setwd(path)
git.log <- file(paste(path,"commits.csv",sep = "/"), open = 'r')
days <- seq(as.Date("2016-07-20"), as.Date("2016-10-04"), by="days")
times <- seq(
from=as.POSIXct("2012-1-1 0:00"),
to=as.POSIXct("2012-1-1 23:00"),
by="hour"
)
hours <- strftime(times, format="%H")
# Switch the hours order so that the day starts at 7am and finishes at 6am the next day.
hours <- hours[c(8:24, 1:7)]
tally.df <- data.frame(matrix(ncol = length(times), nrow = length(days), data = 0))
rownames(tally.df) <- days
colnames(tally.df) <- hours # Hours only. Use "%H:%M:%S" for mins and secs.
# Download git log in csv format with nicely formatted dates.
# git log --date=iso --pretty=format:'"%h","%an","%ad","%s"' > commits.csv
commits.df <- read.csv(file = git.log, header = FALSE)
colnames(commits.df) <- c("time", "message")
close(git.log)
# Take just the times of the commits, and populate tally df.
for (t in as.character(commits.df$time)) {
# Day
d <- unlist(strsplit(t, ''))[1:10]
d <- paste(d, collapse="")
# Time
h <- unlist(strsplit(t, ''))[12:13]
h <- paste(h, collapse="")
tally.df[d, h] <- tally.df[d, h] + 1
}
write.csv(tally.df, file = "commits_tally.csv")
# COMMIT TIMES SCATTER PLOT
coeff_bigger=2
c <- as.numeric(hours)
cols <- rgb((c^2+100)/800, 1/(c+1.5), 0.6, max=1)
plot(rep(1, length(days))~days, type="n", xlab= "Date", ylab="Time of commit / Unreasonable-ness of hour", yaxt="n", ylim=c(1,24))
axis(2, at=seq(2,24,2), labels=paste(hours[seq(2,24,2)], "00", sep=""), las=2)
for (i in 1:length(days)) {
points(hours~rep(days[i],24), cex=unlist(tally.df[i,]*coeff_bigger), pch=19, col=cols)
}
title("Hour and number of git commits over time")
